version: "3"
services:
  mongodb:
    container_name: 'mongodb'
    image: 'mongo:latest'
    restart: always
    networks:
      my_network:
        ipv4_address: 172.28.0.51
    ports:
      - '27017:27017'
    volumes:
      - mongodb-data:/data/db

  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.3.2'
    container_name: 'zookeeper'
    restart: on-failure
    networks:
      my_network:
        ipv4_address: 172.28.0.52
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: 'confluentinc/cp-kafka:7.3.2'
    container_name: 'kafka'
    restart: on-failure
    networks:
      my_network:
        ipv4_address: 172.28.0.53
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # To start with localhost PLAINTEXT://127.0.0.1:9092 // To start with kubernetes PLAINTEXT://172.28.0.53:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.28.0.53:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: 'kafka-ui'
    image: 'provectuslabs/kafka-ui'
    ports:
      - "8080:8080"
    restart: on-failure
    networks:
      my_network:
        ipv4_address: 172.28.0.54
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_NAME=local
    depends_on:
      - kafka

  elasticsearch:
    container_name: 'elasticsearch'
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.13.0'
    restart: on-failure
    networks:
      my_network:
        ipv4_address: 172.28.0.55
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    container_name: 'kibana'
    image: 'docker.elastic.co/kibana/kibana:7.13.0'
    restart: on-failure
    networks:
      my_network:
        ipv4_address: 172.28.0.56
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  elasticsearch-data:
  mongodb-data:

networks:
  my_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16