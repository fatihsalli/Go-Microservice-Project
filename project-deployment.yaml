# => OrderAPI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-api-deployment
spec:
  selector:
    matchLabels:
      app: order-api
  replicas: 2
  template:
    metadata:
      labels:
        app: order-api
    spec:
      containers:
        - name: order-api
          image: order-user-project/order-api:V01
          ports:
            - containerPort: 8011
---
apiVersion: v1
kind: Service
metadata:
  name: order-api
spec:
  selector:
    app: order-api
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8011
      nodePort: 30001
---
# => UserAPI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-api-deployment
spec:
  selector:
    matchLabels:
      app: user-api
  replicas: 2
  template:
    metadata:
      labels:
        app: user-api
    spec:
      containers:
        - name: user-api
          image: order-user-project/user-api:V01
          ports:
            - containerPort: 8012
---
apiVersion: v1
kind: Service
metadata:
  name: user-api
spec:
  selector:
    app: user-api
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8012
      nodePort: 30002
---
# => Kafka
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  type: ClusterIP
  selector:
    app: kafka
  ports:
    - name: kafka-port
      port: 9092
      targetPort: 9092

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: kafka
            - name: KAFKA_CREATE_TOPICS
              value: "topic1:1:1"
          volumeMounts:
            - name: data
              mountPath: /var/lib/kafka/data
          resources:
            limits:
              cpu: "1"
              memory: 512Mi
      volumes:
        - name: data
          emptyDir: {}
---
# => Kafka Zookeper
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
    - name: client
      port: 2181
      protocol: TCP
      targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: zookeeper:3.7.0
          ports:
            - containerPort: 2181
              name: client
# => MongoDB
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017